generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  user_id         Int       @id @default(autoincrement())
  user_email      String    @unique
  user_password   String
  user_name       String
  user_nickname   String
  user_image      String?
  user_created_at DateTime  @default(now())
  user_comments   Comment[]
  user_likes      Like[]
  user_posts      Post[]
}

model Post {
  post_id       Int          @id @default(autoincrement())
  post_content  String
  post_owner_id Int
  reg_date      DateTime     @default(now())
  post_comments Comment[]
  post_likes    Like[]
  post_owner    User         @relation(fields: [post_owner_id], references: [user_id], onDelete: Cascade)
  post_images   Post_Image[]
  post_tags     Post_Tag[]
}

model Tag {
  tag_name  String     @id
  count     Int        @default(0)
  post_tags Post_Tag[]
}

model Post_Tag {
  Tag      Tag    @relation(fields: [tag_name], references: [tag_name])
  tag_name String
  Post     Post   @relation(fields: [post_id], references: [post_id])
  post_id  Int

  @@id([tag_name, post_id])
}

model Post_Image {
  image_id      Int      @id @default(autoincrement())
  image_post_id Int
  image_link    String?
  reg_date      DateTime @default(now())
  image_post    Post     @relation(fields: [image_post_id], references: [post_id], onDelete: Cascade)
}

model Comment {
  comment_id       Int      @id @default(autoincrement())
  comment_content  String
  comment_owner_id Int
  comment_post_id  Int
  reg_date         DateTime @default(now())
  comment_owner    User     @relation(fields: [comment_owner_id], references: [user_id], onDelete: Cascade)
  comment_post     Post     @relation(fields: [comment_post_id], references: [post_id], onDelete: Cascade)
}

model Like {
  like_id       Int  @id @default(autoincrement())
  like_owner_id Int
  like_post_id  Int
  like_owner    User @relation(fields: [like_owner_id], references: [user_id], onDelete: Cascade)
  like_post     Post @relation(fields: [like_post_id], references: [post_id], onDelete: Cascade)
}
